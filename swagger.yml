swagger: '2.0'
info:
  description: This is a simple API
  version: 1.0.0
  title: Simple Inventory API
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: users
  description: Operations available to regular users
- name: admins
  description: Operations available to regular admins
- name: cinema
  description: Operations available to regular users
- name: movie
  description: Operations available to regular users
- name: schedule
  description: Operations available to regular users

paths:
  /users:
    get:
      tags:
      - users
      summary: list users
      operationId: listUsers
      description: |
        By accessing this, will show list of users in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: list of users that regist in booking ticket          
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                type: array
                items:
                  $ref: '#/definitions/responseUser'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'            
  /users/login:
    post:
      tags:
      - users
      summary: login for users
      operationId: loginUsers
      description: |
        for accessing to booking ticket
      produces:
      - application/json      
      parameters:
      - in: body
        name: userData
        description: user data to check
        schema:
          $ref: '#/definitions/requestUserLogin'
      responses:
        200:
          description: success to login as user
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                $ref: '#/definitions/responseUserLogin'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /users/register:
    post:
      tags:
      - users
      summary: registration for user
      operationId: registUser
      description: |
        By accessing this, user data will add in table users
      produces:
      - application/json      
      parameters:
      - in: body
        name: user
        description: user data to add
        schema:
          $ref: '#/definitions/requestRegister'
      responses:
        200:
          description: success response
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                $ref: '#/definitions/responseUser'                
        500:
          description: Internal server error  
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /admins:
    get:
      tags:
      - admins
      summary: list admins
      operationId: listAdmins
      description: |
        By accessing this, will show list of aadmins in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: list of admins that regist in booking ticket          
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                type: array
                items:
                  $ref: '#/definitions/responseAdmin'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'            
  /admins/login:
    post:
      tags:
      - admins
      summary: login for users
      operationId: loginUsers
      description: |
        for accessing to booking ticket
      produces:
      - application/json      
      parameters:
      - in: body
        name: userData
        description: user data to check
        schema:
          $ref: '#/definitions/requestAdminLogin'
      responses:
        200:
          description: success to login as user
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                $ref: '#/definitions/responseAdminLogin'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /admins/register:
    post:
      tags:
      - admins
      summary: registration for user
      operationId: registUser
      description: |
        By accessing this, user data will add in table users
      produces:
      - application/json      
      parameters:
      - in: body
        name: user
        description: user data to add
        schema:
          $ref: '#/definitions/requestAdminRegister'
      responses:
        200:
          description: success response
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                $ref: '#/definitions/responseAdmin'                
        500:
          description: Internal server error  
          schema:
            $ref: '#/definitions/internalServerErrResponse'
            
  /cinemas:
    get:
      tags:
      - cinema
      summary: list cinema
      operationId: listCinema
      description: |
        By accessing this, will show list of cinema in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: list of users that regist in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                type: array
                items:
                  $ref: '#/definitions/responseCinema'
            
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'
    post:
      tags:
      - cinema
      summary: list cinema
      operationId: addCinema
      description: |
        By accessing this, will show list of cinema in booking ticket
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: user data to add
        schema:
          $ref: '#/definitions/requestCinemaAdd'
      responses:
        200:
          description: list of users that regist in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                
                $ref: '#/definitions/responseCinema'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /cinemas/{cinemaid}:
    get:
      tags:
      - cinema
      summary: list movie in one cinema
      operationId: listCinemaDetail
      description: |
        By accessing this, will show list of cinema in booking ticket
      produces:
      - application/json      
      parameters:
        - in: path
          name: cinemaId
          description: example =  /cinema/2
          required: true
          type: string
      responses:
        200:
          description: list of users that regist in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                
                type: array
                items:
                  $ref: '#/definitions/responseCinemaDetail'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /movie:
    get:
      tags:
      - movie
      summary: list movie
      operationId: listMovie
      description: |
        By accessing this, will show list of movie in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: list of users that regist in booking ticket          
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                type: array
                items:
                  $ref: '#/definitions/responseMovie'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'
    post:
      tags:
      - movie
      summary: add movie
      operationId: addMovie
      description: |
        By accessing this, will show add movie in booking ticket
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: user data to add
        schema:
          $ref: '#/definitions/requestMovieAdd'
      responses:
        200:
          description: list of users that regist in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                                            
                $ref: '#/definitions/schemaMovie'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /movie/{movieid}:
    get:
      tags:
      - movie
      summary: detail one movie
      operationId: detailMovie
      description: |
        By accessing this, will show detail of movie in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: list of users that regist in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                                            
                $ref: '#/definitions/schemaMovie'
        500:
          description: Internal server error    
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /schedule:
    get:
      tags:
      - schedule
      summary: list schedule
      operationId: listSchedule
      description: |
        By accessing this, will show list of schedule in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: list of users that regist in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:
                type: array
                items:
                  $ref: '#/definitions/responseSchedule'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'
    post:
      tags:
      - schedule
      summary: list cinema
      operationId: listCinema
      description: |
        By accessing this, will show list of cinema in booking ticket
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: user data to add
        schema:
          $ref: '#/definitions/requestScheduleAdd'
      responses:
        200:
          description: list of users that regist in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                
                $ref: '#/definitions/schemaSchedule'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'
  /schedule/{scheduleId}:
    get:
      tags:
      - schedule
      summary: detail schedule
      operationId: detailSchedule
      description: |
        By accessing this, will show detail of schedule in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: detail of schedule in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                
                $ref: '#/definitions/responseScheduleDetail'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'
  /schedule/time:
    post:
      tags:
      - schedule
      summary: create time schedule
      operationId: timeSchedule
      description: |
        By accessing this, will create time schedule
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: user's booking data 
        schema:
          $ref: '#/definitions/requestScheduleTimeAdd'             
      responses:
        200:
          description: list of users that regist in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                                            
                $ref: '#/definitions/schemaScheduleTime'
        500:
          description: Internal server error    
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /booking:
    get:
      tags:
      - schedule
      summary: list booking
      operationId: listBooking
      description: |
        By accessing this, will show list of booking in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: success get list of booking in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                                                        
                type: array
                items:
                  $ref: '#/definitions/schemaBooking'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'
    post:
      tags:
      - schedule
      summary: add booking ticket
      operationId: addBooking
      description: |
        By accessing this, will add booking ticket to the table
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: user's booking data 
        schema:
          $ref: '#/definitions/requestBookingAdd'
      responses:
        200:
          description: response success to add booking data
          schema:            
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                                            
                $ref: '#/definitions/schemaBooking'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrResponse'
  /booking/{bookingId}:
    get:
      tags:
      - schedule
      summary: Detail booking
      operationId: detailBooking
      description: |
        By accessing this, will show detail of booking in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: success get detail of booking in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                                                        
                type: array
                items:
                  $ref: '#/definitions/responseBookingDetail'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'
  /booking/user/{userId}:
    get:
      tags:
      - schedule
      summary: List User booking
      operationId: listUserBooking
      description: |
        By accessing this, will show list of user booking in booking ticket
      produces:
      - application/json      
      responses:
        200:
          description: success get list of user booking in booking ticket
          schema:
            type: object    
            properties:      
              meta:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "successfull"
              data:                                                                        
                $ref: '#/definitions/responseBookingUser'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/internalServerErrArrayResponse'

definitions:
  internalServerErrResponse:
    type: object    
    properties:      
      meta:
        type: object
        properties:
          status:
            type: integer
            example: 500
          message:
            type: string
            example: "Internal Server Error"
      data:
        type: object
  internalServerErrArrayResponse:
    type: object    
    properties:      
      meta:
        type: object
        properties:
          status:
            type: integer
            example: 500
          message:
            type: string
            example: "Internal Server Error"
      data:
        type: array
        items:
          type: object
  baseResponse:
    type: object    
    properties:      
      meta:
        type: object
        properties:
          status:
            type: integer
            example: 200
          message:
            type: string
            example: "successfull"
      data:
        type: object
        properties:
          status:
            type: integer
            example: 200          
      
  schemaUser:
    type: object
    required:    
    - email
    - password
    - fullname
    - gender
    - phone
    properties:      
      email:
        type: string
        example: alfi@gmail.com      
      fullname:
        type: string
        example: Muhammad Alfi Syahri
      gender:
        type: string
        example: Laki - Laki
      phone:
        type: string
        example: '081270826621'
  responseUser:
    type: object    
    properties:                
      id:
        type: integer
        example: 1
      email:
        type: string
        example: 'al@gmail.com'
      fullname:
        type: string
        example: 'Alfi Syahri'
      gender:
        type: string
        example: 'al@gmail.com'
      phone:
        type: string
        example: 'al@gmail.com'
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20'        
  requestRegister:
    type: object
    required:    
    - email
    - password
    - fullname
    - gender
    - phone
    properties:      
      email:
        type: string
        example: alfi@gmail.com
      password:
        type: string
        example: al28Sep2118
      fullname:
        type: string
        example: Muhammad Alfi Syahri
      gender:
        type: string
        example: Laki - Laki
      phone:
        type: string
        example: '081270826621'        
  responseRegister:
    type: object    
    properties:
      code:
        type: string
        example: 200
      message:
        type: string
        example: Data User Berhasil Ditambahkan
      data:
        $ref: '#/definitions/responseUser'
  requestUserLogin:
    type: object
    required:    
    - email
    - password    
    properties:      
      email:
        type: string
        example: alfi@gmail.com
      password:
        type: string
        example: al28Sep2118    
  responseUserLogin:
    type: object    
    properties:
      user:        
        $ref: '#/definitions/responseUser'      
      token:
        type: string
        example: 8270128732niua8dan2i2n28ndih    
  responseAdmin:
    type: object    
    properties:                
      id:
        type: integer
        example: 1
      email:
        type: string
        example: 'al@gmail.com'
      fullname:
        type: string
        example: 'Alfi Syahri'      
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20' 
  requestAdminLogin:
    type: object
    required:    
    - email
    - password    
    properties:      
      email:
        type: string
        example: alfi@gmail.com
      password:
        type: string
        example: al28Sep2118       
  responseAdminLogin:
    type: object      
    properties:      
      admin:        
        $ref: '#/definitions/responseAdmin'      
      token:
        type: string
        example: 'weqweu1h838137bjbeb#$jwn'            
  requestAdminRegister:
    type: object
    required:    
    - email
    - password
    - fullname    
    properties:      
      email:
        type: string
        example: alfi@gmail.com
      password:
        type: string
        example: al28Sep2118
      fullname:
        type: string
        example: Muhammad Alfi Syahri
  responseCinema:
    type: object    
    properties:      
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Grand Indonesia
      location:
        type: string
        example: Jl. Sudirman
      maps:
        type: string
        example: maps.google.com/widjwndwi
      phone:
        type: string
        example: '0812727282'  
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20'      
  requestCinemaAdd:
    type: object
    required:    
    - name
    - location
    - maps
    - phone
    properties:
      name:
        type: string
        example: AEON Mall
      location:
        type: string
        example: Jl. Kesayangan
      maps:
        type: string
        example: maps.google.com/widjwndwi
      phone:
        type: string
        example: '081270826621'  
  responseCinemaDetail:
    type: object    
    properties:
      code:
        type: string
        example: 200
      message:
        type: string
        example: Data Cinema Berhasil Ditambahkan
      data:
        type: object    
        properties:
          cinema:
            $ref: '#/definitions/responseCinema'
          schedule:
            type: array
            items:
              type: object    
              properties:
                scheduleId:
                  type: integer
                  example: 1
                movieId:
                  type: integer
                  example: 2
                title:
                  type: string
                  example: 'Shang Chi'
                poster:
                  type: string
                  example: 'https://dummyimage.com/400x600/000/fff'
                duration:
                  type: string
                  example: '2 Jam 1 Menit'
                date:
                  type: string
                  example: '2021-02-01'
                price:
                  type: integer
                  example: 40000                
  responseMovie:
    type: object    
    properties:      
      id:
        type: integer
        example: 1
      title:
        type: string
        example: Shang Chi
      poster:
        type: string
        example: link_cdn
      releaseDate:
        type: string
        example: '2020-11-11'
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20'      
  schemaMovie:
    type: object    
    properties:
      id:
        type: integer
        example: 1
      title:
        type: string
        example: Spiderman Far From Home
      poster:
        type: string
        example: link_cdn
      duration:
        type: string
        example: 2h 1min      
      movie_trailer:
        type: string
        example: youtube.com/jwjndwjndw
      players:
        type: string
        example: Tom Holland, Zendaya, Chris Evans      
      release_date:
        type: string
        example: '2021-09-15T11:46:39.000000Z'
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20'      
  requestMovieAdd:
    type: object
    required:    
    - title
    - poster
    - release_date
    - movie_trailer
    - players    
    properties:      
      title:
        type: string
        example: Spiderman Far From Home
      poster:
        type: string
        example: link
      release_date:
        type: string
        example: '2021-09-15T11:46:39.000000Z'
      duration:
        type: string
        example: 2 jam 2 menit
      movie_trailer:
        type: string
        example: youtube.com/jwjndwjndw
      players:
        type: string
        example: Tom Holland, Zendaya, Chris Evans      
  responseMovieAdd:
    type: object    
    properties:
      code:
        type: string
        example: 200
      message:
        type: string
        example: Data Cinema Berhasil Ditambahkan
      data:
        $ref: '#/definitions/schemaMovie'



  schemaSchedule:
    type: object    
    properties:
      id:
        type: integer
        example: 1
      movie_id:
        type: integer
        example: 1
      cinema_id:
        type: integer
        example: 2
      date:
        type: string
        example: '2021-09-15T11:46:39.000000Z'
      price:
        type: integer
        example: 50000
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20'      

  requestScheduleAdd:    
    type: object
    required:    
    - movie_id
    - cinema_id
    - date
    - price
    properties:      
      movie_id:
        type: integer
        example: 1
      cinema_id:
        type: integer
        example: 2
      date:
        type: string
        example: '2021-09-15T11:46:39.000000Z'
      price:
        type: integer
        example: 50000
  responseScheduleAdd:
    type: object    
    properties:
      code:
        type: string
        example: 200
      message:
        type: string
        example: Data Schedule Berhasil Ditambahkan
      data:
        $ref: '#/definitions/schemaSchedule'
      date:
        type: string
        example: '2021-09-15T11:46:39.000000Z'
      price:
        type: integer
        example: 50000

  responseSchedule:
    type: object    
    properties:
      id:
        type: integer
        example: 1
      movie:
        type: object
        properties:
          title:
            type: string
            example: 'Shangchi'
          poster:
            type: string
            example: 'https://dummyimage.com/400x600/000/fff'
          duration:
            type: string
            example: '2 jam 40 menit'
      cinema:
        type: object
        properties:
          name:
            type: string
            example: 'Puri Indah XXI'
          maps:
            type: string
            example: 'maps.google.com/widjwndwi'      
      date:
        type: string
        example: '2021-09-15T11:46:39.000000Z'
      price:
        type: integer
        example: 50000
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20'  
  responseScheduleDetail:
    type: object    
    properties:      
      schedule:
        $ref: '#/definitions/schemaSchedule'
      time:
        type: array
        items:
          $ref: '#/definitions/schemaScheduleTime'
  schemaScheduleTime:
    type: object    
    properties:
      id:
        type: integer
        example: 1
      scheduleId:
        type: integer
        example: 2
      timeMovie:
        type: string
        example: '2020-02-02 18:20:20'
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20'   
  requestScheduleTimeAdd:    
    type: object
    required:    
    - scheduleId
    - timeMovie    
    properties:      
      scheduleId:
        type: integer
        example: 2
      timeMovie:
        type: string
        example: '2020-02-02 18:20:20'
  schemaBooking:
    type: object    
    properties:
      id:
        type: integer
        example: 1
      userId:
        type: integer
        example: 1
      timeScheduleId:
        type: integer
        example: 2
      numberSeat:
        type: string
        example: H14
      quantity:
        type: integer
        example: 1
      totalPrice:
        type: integer
        example: 40000
      qrcode:
        type: string
        example: 'https://api.qrserver.com/v1/create-qr-code/?data={UserId:1,TimeScheduleId:1}&size=100x100'
      createdAt:
        type: string
        example: '2020-02-02 18:20:20'
      updatedAt:
        type: string
        example: '2020-02-02 18:20:20'  
  requestBookingAdd:
    type: object
    required:    
    - user_id
    - time_schedule_id
    - number_seat
    - qty
    - total_price  
    properties:
      user_id:
        type: integer
        example: 1
      time_schedule_id:
        type: integer
        example: 2
      number_seat:
        type: string
        example: H14
      qty:
        type: integer
        example: 1
      total_price:
        type: integer
        example: 40000
  responseBookingUser:
    type: object    
    properties:
      id:
        type: integer
        example: 1      
      titileMovie:
        type: string
        example: 'Shangchi'
      posterMovie:
        type: string
        example: 'https://dummyimage.com/400x600/000/fff'
      name:
        type: string
        example: 'Puri Indah XXI'
      timeSchedule:
        type: string
        example: '2020-02-02 18:20:20'      
  responseBookingDetail:
    type: object    
    properties:
      id:
        type: integer
        example: 1      
      titileMovie:
        type: string
        example: 'Shangchi'
      posterMovie:
        type: string
        example: 'https://dummyimage.com/400x600/000/fff'
      name:
        type: string
        example: 'Puri Indah XXI'
      timeSchedule:
        type: string
        example: '2020-02-02 18:20:20'      
      numberSeat:
        type: string
        example: H14
      quantity:
        type: integer
        example: 1
      totalPrice:
        type: integer
        example: 40000
      qrcode:
        type: string
        example: 'https://api.qrserver.com/v1/create-qr-code/?data={UserId:1,TimeScheduleId:1}&size=100x100'
  responseBookingeAdd:
    type: object    
    properties:
      code:
        type: string
        example: 200
      message:
        type: string
        example: Data Booking Berhasil Ditambahkan
      data:
        $ref: '#/definitions/schemaBooking'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /alfi2811/booking-ticket/1.0.0
schemes:
 - https